@mixin columns-count($count){
    -webkit-column-count: $count;
    -moz-column-count: $count;
    column-count: $count;
}
@mixin border-radius($radius) {
  -webkit-border-radius: $radius!important;
     -moz-border-radius: $radius!important;
      -ms-border-radius: $radius!important;
          border-radius: $radius!important;
}

@mixin opacity($value) {
  -webkit-opacity: $value!important;
     -moz-opacity: $value!important;
      -ms-opacity: $value!important;
          opacity: $value!important;
}

@mixin backface-visibility($value) {
  -webkit-backface-visibility: $value!important;
     -moz-backface-visibility: $value!important;
      -ms-backface-visibility: $value!important;
          backface-visibility: $value!important;
}

/* Type */
/*https://www.smashingmagazine.com/2015/06/responsive-typography-with-sass-maps/*/
@mixin font-size($fs-map, $fs-breakpoints: $breakpoints) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      @include make-font-size($fs-font-size);
    }
    @else {
      // If $fs-font-size is a key that exists in
      // $fs-breakpoints, use the value
      @if map-has-key($fs-breakpoints, $fs-breakpoint) {
        $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
      }
      @media screen and (min-width: $fs-breakpoint) {
        @include make-font-size($fs-font-size);
      }
    }
  }
}

// Utility function for mixin font-size
@mixin make-font-size($fs-font-size) {
  // If $fs-font-size is a list, include
  // both font-size and line-height
  @if type-of($fs-font-size) == "list" {
    font-size: nth($fs-font-size, 1);
    @if (length($fs-font-size) > 1) {
      line-height: nth($fs-font-size, 2);
    }
  }
  @else {
    font-size: $fs-font-size;
  }
}